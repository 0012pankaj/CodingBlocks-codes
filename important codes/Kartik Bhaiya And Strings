Kartik Bhaiya has a string consisting of only 'a' and 'b' as the characters.
Kartik Bhaiya describes perfectness of a string as the maximum length substring 
of equal characters. Kartik Bhaiya is given a number k which denotes the maximum number 
of characters he can change. Find the maximum perfectness he can generate by changing no more than k characters.

Input Format
The first line contains an integer denoting the value of K. The next line contains a string having only ‘a’ and ‘b’ as the characters.

Constraints
2 ≤ N ≤ 10^6

Output Format
A single integer denoting the maximum perfectness achievable.

Sample Input
2
abba
Sample Output
4
Explanation
We can swap the a's to b using the 2 swaps and obtain the string "bbbb". This would have all the b's and hence the answer 4.
Alternatively, we can also swap the b's to make "aaaa". The final answer remains the same for both cases.

.................................................................solution-,..........................
import java.util.*;
public class Main {
      public static int maximumsubString(String str,int k,char ch)
      {
          //inisialize
          int si=0;
          int ei=0;
          int ans=0;
          int flip=0;

          while(ei<str.length())
          {
              //grow window
             if(str.charAt(ei)== ch)
             { 
               flip++;
             }

              //shrink window
              while(flip > k && si<= ei )
              {  if(str.charAt(si)==ch)
                  flip--;
                  si++;
              }

              //calculate ans
              ans=Math.max(ans,ei-si+1);

              ei++;
              
          }
          return ans;
      } 

    public static void main(String args[]) {
        Scanner sc=new Scanner(System.in);
        int k=sc.nextInt();
        String str=sc.next();
        int maxwithA = maximumsubString(str,k,'a');
        int maxwithB = maximumsubString(str,k,'b');
        System.out.print(Math.max(maxwithA,maxwithB));


    }
}

............................................

Approch:- Using slidding window
given quection is baised on variabl size but having unicq logic
1.we take two pointer 1.maxsizewith flip a  2.maxsizewith flip b
2.in maximumsubarray function
  2.1 we start groing window and when character match we increase flip counter
  2.2 we shrink window when flip counter is greater then given
  and if si==ch we decrease flip counter as its is not in window
3.we count ans bay compairing window size.  
