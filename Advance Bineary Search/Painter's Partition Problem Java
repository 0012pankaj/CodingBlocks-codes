Given K painters to paint N boards where each painter takes 1 unit of time to paint 1 unit of boards i.e. if the length of a particular board is 5, it will take 5 units of time to paint the board. Compute the minimum amount of time to paint all the boards.

Note that:

Every painter can paint only contiguous segments of boards.
A board can only be painted by 1 painter at maximum.
Input Format
First line contains K which is the number of painters. Second line contains N which indicates the number of boards. Third line contains N space separated integers representing the length of each board.

Constraints
1 <= K <= 10
1 <= N <= 10
1<= Length of each Board <= 10^8

Output Format
Output the minimum time required to paint the board.

Sample Input
2
2
1 10
Sample Output
10
_____________________________________________________________________________________________________________________________---
intution-->whenver you have to do CONTIGUES allocation to certain MEMEBERS,and we have to MINIMIZE/MAXIMIZE certain value
    APPLY BINEARY SEARCH
    _____________________________________________________________________
           



import java.util.*;
public class Main {
    public static void main(String args[]) {
        Scanner sc=new Scanner(System.in);
      
            int k=sc.nextInt();
            int n=sc.nextInt();
			       int s=0;
            int[] arr=new int[n];
            for(int i=0;i<n;i++){
               arr[i]=sc.nextInt();
			          s+=arr[i];
            }     
     
          int lo=0;
	        int  hi=s;
     
	      int ans=-1;
        
	    while(hi>=lo){
			int mid=lo+(hi-lo)/2;
			if(ispossible(mid,arr,k)){
				ans=mid;
				hi=mid-1;
			}else{
				lo=mid+1;
			}			
		}

          System.out.println( ans);

    }
	//________________________________________________________________
	public static boolean ispossible(int mid,int[] arr,int Givenpainter){
		int p=1;
		int sm=0;

		for(int i=0;i<arr.length;i++){
			 
			if(arr[i]>mid){
				return false;
			}

		     if(sm+arr[i] <= mid){
				 sm+=arr[i];
			 }else{
				 p++;
				 if(p > Givenpainter){
					 return false;
				 }
				 sm=arr[i];
			 }
		}

     return true;
	}
  
  //_____________________________________________________________________
}
