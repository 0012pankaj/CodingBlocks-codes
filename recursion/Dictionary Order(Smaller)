import java.util.*;
public class Main {
     
    public static void permutation(String que,String ans,String s)
    {   
                                                 //base case [ans.compareTo(s) <0]-->compare our given string with each permutation 
        if(que.length()==0 &&  ans.compareTo(s) < 0)
             {  
               System.out.println(ans);
               return;
              }

                                                   //for loop for each char call
        for(int i=0; i<que.length();i++){ 
             char ch=que.charAt(i);
            permutation(que.substring(0,i)+que.substring(i+1),ans+ch,s);          
        }
    }
                                                    //idea: we pass whole string except curent charecter to recursive call and add
                                                     //that current character to our answer string
    
	public static void main(String[] args) {
                                                   //input
	    Scanner sc=new Scanner(System.in);
	    String s=sc.next();
                                             //first sort in lexicographically using char Array and again covert into string
	    char arr[]=s.toCharArray();
	    Arrays.sort(arr);
      String st=String.valueOf(arr);

                                           //call permutation function
	    permutation(st,"",s);
	}
}

