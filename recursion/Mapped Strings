Find all the possible mappings of characters in a sorted order -->gfg

import java.util.*;
public class Main {
    
    public static void callfun(char[] inarr,char[] outarr,int i,int j)
    {  //base case
       if(i>=inarr.length)
        {
            String ans=new String(outarr);
            System.out.println(ans.substring(0,j));
            return;
        }
        int digit=inarr[i]-'0';

        char ch=(char)(digit + (int)('A')-1);
        outarr[j]=ch;

        callfun(inarr,outarr,i+1,j+1);
        
        if(i+1< inarr.length)
        {   
            int sd=inarr[i+1]-'0';
            int num=digit*10 +sd;

            if(num<=26)
            {
                ch=(char)(num+(int)'A' -1);
                outarr[j]=ch;

                callfun(inarr,outarr,i+2,i+1);
            }

        }
    }


    public static void main(String args[]) {
       Scanner sc=new Scanner(System.in);
       int n=sc.nextInt();

       String str=String.valueOf(n);
       char[] inarr=str.toCharArray();

       int l=str.length();
       int size=(int)Math.pow(2,l)-1;
       char[] arrout=new char[size];

       callfun(inarr,arrout,0,0);
    }
}
/*Approch:-
1.convert integer to char array
2.create an ans array(outarr) of size 2^l -1
3.pass both array in function and int i and j to itrate in both the array
4. in callfun
   FIRST WE TAKI ONE DIGIT THAN WE TAKE TWO DIGIT TOGETHER

   1.convert one by one each char to in (digit)
   2.and find respective char to digit and store that char in out arr
   //base case 
   3.when we reach at all char in input array and i>inarr.length
    convert outarray to string  and print upto j 

   NOW, Two digit together
   and check that digit togeter id <=26.
