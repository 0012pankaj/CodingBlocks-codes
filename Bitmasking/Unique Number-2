We are given an array containg n numbers.
All the numbers are present twice except for two numbers which are present only once.
Find the unique numbers in linear time without using any extra space. ( Hint - Use Bitwise )

Input Format
First line contains the number n. Second line contains n space separated number.

Constraints
n < 10^5

Output Format
Output a single line containing the unique numbers separated by space

Sample Input
4
3 1 2 1
Sample Output
2 3
__________________________________________________________________________________________________(O(n))-

import java.util.*;
public class Main {
    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
		int arr[]=new int[n];
        
        for (int j = 0; j < n; j++) {
            arr[j] = scanner.nextInt();			
		}
	  findunique(arr,n);
	}

	public static void findunique(int[] arr,int n){

		//1 find xor of all
      int xor=arr[0];
	  for(int i=1;i<n;i++){
		  xor=xor^arr[i];
	  }
   
      //2 find rightmost set bit of all xor
	  int rmsb=xor & -xor ;

	  //find to different xor whose rmsb is set and not set differently
	  int a=0;
	  int b=0;
	  for(int nn: arr){
		  if((nn & rmsb )== 0 )//not set
		  {
			  a=a^nn;
		  }else{          //set 
			  b=b^nn;
		  }
	  }
     

	 //To print ans in sorted order
	 if(a<b){
		 System.out.println(a+" "+b);
	 }else{
          System.out.println(b+" "+a);
	 }
      
	}
   
}
