Let's denote pop_count(x) as the number of bits set ('1' bits) in the binary representation
of the non-negative integer x.

You are given a query consisting of pair of integers l and r.

Find the x, such that l ≤ x ≤ r, and pop_count(x) is maximum possible.

Note : If there are multiple such numbers find the smallest of them.

Input Format
Single line contains two integers l and r .

Constraints
1 <= l,r <= 1018

Output Format
Print the answer in a separate line.

Sample Input
5 10
Sample Output
7 
Explanation
710 = 1112
Popcount ( 7 ) is 3 which is maximum possible popcount in the range [5,10]
____________________________________________________________________________________________________
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long l = sc.nextLong();
        long r = sc.nextLong();

        long H = 1;
        while ((l | H) <= r) {
            l = ( l | H ); //set one more bit in l
            H *= 2; //increase bit in H
        }

        System.out.println(l);
    }
}

/*Approch :-we start from l and Set 1 bit one by in in l and cpmpare with r */
