A professional robber planning to rob houses along a street. Each house has a certain
amount of money stashed, the only constraint stopping him from robbing each of them is
that adjacent houses have security system connected and it will automatically contact 
the police if two adjacent houses were broken into on the same night.

Given a list of non-negative integers representing the amount of money of each house, 
  determine the maximum amount of money he can rob tonight without alerting the police.

Input Format
First line contains integer t as number of testcases. Second line contains integer n as size of array. 
  Third line contains a single integer as element of array.

Constraints
None

Output Format
Print the maximum money as output.

Sample Input
1
4
1 2 3 1
Sample Output
4
  __________________________________________________________________________________________

import java.util.*;
public class Main {
    public static void main (String args[]) {
       Scanner sc=new Scanner(System.in);
	   int t =sc.nextInt();
	   while(t-->0){
		   int n=sc.nextInt();
		   int arr[]=new int[n];
		   for(int i=0;i<n;i++) arr[i]=sc.nextInt();

		   int dp[]= new int[n];
		   Arrays.fill(dp,-1);

		   System.out.println(Robfun(arr,n-1,dp));
	   }
    }
	public static int Robfun(int[] arr, int i, int[] dp) {
		if (i < 0) {
			return 0;
		}
		if (dp[i] != -1) {
			return dp[i];
		}
		int robb = arr[i] + Robfun(arr, i - 2, dp);
		int Dont_rob = Robfun(arr, i - 1, dp);
		return dp[i] = Math.max(robb, Dont_rob);

	}
}
