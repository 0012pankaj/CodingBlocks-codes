Given 3 strings ,the task is to find the longest common sub-sequence in all three given sequences.

Input Format
First line contains first string . Second line contains second string. Third line contains the third string.

Constraints
The length of all strings is |s|< 200

Output Format
Output an integer denoting the length of longest common subsequence of above three strings.

Sample Input
GHQWNV
SJNSDGH
CPGMAH
Sample Output
2
Explanation
"GH" is the longest common subsequence
---------------------------------------------------------------------------------------------------------------

import java.util.*;
public class Main {
    public static void main(String args[]) {
        // Your Code Here
	  Scanner sc=new Scanner(System.in);
	   String s1=sc.next();
	   String s2=sc.next();
	    String s3=sc.next();

		int n1=s1.length();
		int n2=s2.length();
		int n3=s3.length();
	   Integer dp[][][]=new Integer[n1][n2][n3]; //fill with null #Integer
       
       int ans=solveLCS(s1,s2,s3,0,0,0,dp);

	  System.out.println(ans);
    }
	

    public static int solveLCS(String s1,String s2,String s3,int i,int j,int k,Integer[][][] dp){
        if(i>=s1.length() || j>=s2.length()|| k>=s3.length()){
            return 0;
        }

        if(dp[i][j][k] != null){
            return dp[i][j][k];
        }
        
		
        if(s1.charAt(i) == s2.charAt(j) && s1.charAt(i) == s3.charAt(k)){
            return 1+solveLCS(s1,s2,s3,i+1,j+1,k+1,dp);
        }

        return dp[i][j][k]= Math.max(solveLCS(s1,s2,s3,i,j,k+1,dp),Math.max(solveLCS(s1,s2,s3,i,j+1,k,dp),solveLCS(s1,s2,s3,i+1,j,k,dp)));
    }
}
